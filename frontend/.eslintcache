[{"D:\\shopify\\frontend\\src\\index.js":"1","D:\\shopify\\frontend\\src\\App.js":"2","D:\\shopify\\frontend\\src\\components\\Header.js":"3","D:\\shopify\\frontend\\src\\components\\Footer.js":"4","D:\\shopify\\frontend\\src\\screens\\HomeScreen.js":"5","D:\\shopify\\frontend\\src\\components\\Product.js":"6","D:\\shopify\\frontend\\src\\components\\Rating.js":"7","D:\\shopify\\frontend\\src\\screens\\ProductScreen.js":"8","D:\\shopify\\frontend\\src\\store.js":"9","D:\\shopify\\frontend\\src\\reducers\\productReducers.js":"10","D:\\shopify\\frontend\\src\\constants\\productConstant.js":"11","D:\\shopify\\frontend\\src\\actions\\productAction.js":"12","D:\\shopify\\frontend\\src\\components\\Message.js":"13","D:\\shopify\\frontend\\src\\components\\Loader.js":"14","D:\\shopify\\frontend\\src\\screens\\CartScreen.js":"15","D:\\shopify\\frontend\\src\\reducers\\cartReducers.js":"16","D:\\shopify\\frontend\\src\\constants\\cartConstant.js":"17","D:\\shopify\\frontend\\src\\actions\\cartAction.js":"18","D:\\shopify\\frontend\\src\\reducers\\userReducers.js":"19","D:\\shopify\\frontend\\src\\constants\\userConstant.js":"20","D:\\shopify\\frontend\\src\\screens\\LoginScreen.js":"21","D:\\shopify\\frontend\\src\\components\\FormContainer.js":"22","D:\\shopify\\frontend\\src\\actions\\userAction.js":"23","D:\\shopify\\frontend\\src\\screens\\RegisterScreen.js":"24","D:\\shopify\\frontend\\src\\screens\\ProfileScreen.js":"25","D:\\shopify\\frontend\\src\\screens\\ShippingScreen.js":"26","D:\\shopify\\frontend\\src\\components\\CheckoutSteps.js":"27","D:\\shopify\\frontend\\src\\screens\\PaymentScreen.js":"28","D:\\shopify\\frontend\\src\\screens\\PlaceOrderScreen.js":"29","D:\\shopify\\frontend\\src\\actions\\orderAction.js":"30","D:\\shopify\\frontend\\src\\constants\\orderConstant.js":"31","D:\\shopify\\frontend\\src\\reducers\\orderReducers.js":"32","D:\\shopify\\frontend\\src\\screens\\OrderScreen.js":"33","D:\\shopify\\frontend\\src\\screens\\UserListScreen.js":"34","D:\\shopify\\frontend\\src\\screens\\UserEditScreen.js":"35","D:\\shopify\\frontend\\src\\screens\\ProductListScreen.js":"36","D:\\shopify\\frontend\\src\\screens\\ProductEditScreen.js":"37","D:\\shopify\\frontend\\src\\screens\\OrderListScreen.js":"38","D:\\shopify\\frontend\\src\\components\\SearchBox.js":"39"},{"size":332,"mtime":1612416546286,"results":"40","hashOfConfig":"41"},{"size":2628,"mtime":1613387466982,"results":"42","hashOfConfig":"41"},{"size":2963,"mtime":1613387702042,"results":"43","hashOfConfig":"41"},{"size":426,"mtime":1612160400901,"results":"44","hashOfConfig":"41"},{"size":1277,"mtime":1613387751871,"results":"45","hashOfConfig":"41"},{"size":893,"mtime":1612178307401,"results":"46","hashOfConfig":"41"},{"size":1161,"mtime":1612177371405,"results":"47","hashOfConfig":"41"},{"size":8482,"mtime":1613386722796,"results":"48","hashOfConfig":"41"},{"size":2278,"mtime":1613367997379,"results":"49","hashOfConfig":"41"},{"size":3996,"mtime":1613367955544,"results":"50","hashOfConfig":"41"},{"size":1370,"mtime":1613367831619,"results":"51","hashOfConfig":"41"},{"size":4508,"mtime":1613387943976,"results":"52","hashOfConfig":"41"},{"size":298,"mtime":1612419422541,"results":"53","hashOfConfig":"41"},{"size":354,"mtime":1612419256930,"results":"54","hashOfConfig":"41"},{"size":4052,"mtime":1612871917420,"results":"55","hashOfConfig":"41"},{"size":1474,"mtime":1612934403008,"results":"56","hashOfConfig":"41"},{"size":240,"mtime":1612872608060,"results":"57","hashOfConfig":"41"},{"size":1325,"mtime":1612934488099,"results":"58","hashOfConfig":"41"},{"size":4701,"mtime":1613197401631,"results":"59","hashOfConfig":"41"},{"size":1545,"mtime":1613196719091,"results":"60","hashOfConfig":"41"},{"size":2276,"mtime":1612850467619,"results":"61","hashOfConfig":"41"},{"size":410,"mtime":1612848926119,"results":"62","hashOfConfig":"41"},{"size":6571,"mtime":1613302321944,"results":"63","hashOfConfig":"41"},{"size":3313,"mtime":1612868851146,"results":"64","hashOfConfig":"41"},{"size":6385,"mtime":1613127779539,"results":"65","hashOfConfig":"41"},{"size":2622,"mtime":1612872762580,"results":"66","hashOfConfig":"41"},{"size":1425,"mtime":1612871967271,"results":"67","hashOfConfig":"41"},{"size":1800,"mtime":1612872989822,"results":"68","hashOfConfig":"41"},{"size":6585,"mtime":1613126455574,"results":"69","hashOfConfig":"41"},{"size":4957,"mtime":1613304551241,"results":"70","hashOfConfig":"41"},{"size":1276,"mtime":1613303302585,"results":"71","hashOfConfig":"41"},{"size":4459,"mtime":1613303514187,"results":"72","hashOfConfig":"41"},{"size":8642,"mtime":1613304758651,"results":"73","hashOfConfig":"41"},{"size":3229,"mtime":1613198506200,"results":"74","hashOfConfig":"41"},{"size":3393,"mtime":1613197824605,"results":"75","hashOfConfig":"41"},{"size":4493,"mtime":1613217565003,"results":"76","hashOfConfig":"41"},{"size":6397,"mtime":1613229845721,"results":"77","hashOfConfig":"41"},{"size":2833,"mtime":1613302707479,"results":"78","hashOfConfig":"41"},{"size":826,"mtime":1613388336106,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"ni1i8n",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\shopify\\frontend\\src\\index.js",[],["161","162"],"D:\\shopify\\frontend\\src\\App.js",[],"D:\\shopify\\frontend\\src\\components\\Header.js",[],"D:\\shopify\\frontend\\src\\components\\Footer.js",[],"D:\\shopify\\frontend\\src\\screens\\HomeScreen.js",[],"D:\\shopify\\frontend\\src\\components\\Product.js",[],"D:\\shopify\\frontend\\src\\components\\Rating.js",[],"D:\\shopify\\frontend\\src\\screens\\ProductScreen.js",["163","164"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form, FormControl, FormGroup } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n\r\nimport Rating from '../components/Rating';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\n\r\nimport { listProductDetails, createProductReview } from '../actions/productAction';\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstant'\r\n\r\n\r\n\r\nconst ProductScreen = ({ match, history }) => {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const { error: errorProductReview, success: successProductReview } = productReviewCreate\r\n\r\n    useEffect(() =>{\r\n        if(successProductReview) {\r\n            alert('Review Submitted')\r\n            setRating(0);\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [match, dispatch, successProductReview])\r\n\r\n\r\n    const addToCartHandler = () =>{\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n\r\n    const submitHandler = (e)=>{\r\n        e.preventDefault();\r\n\r\n        dispatch(createProductReview(match.params.id, {\r\n            rating,\r\n            comment\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n          <Link className='btn btn-light my-3' to='/'>Go Back</Link>\r\n          {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n              <>\r\n            <Row>\r\n                <Col md={6}>\r\n                    <Image src={product.image} alt={product.name} fluid ></Image>\r\n                </Col>\r\n                <Col md={3}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h3>{product.name}</h3>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            Price: Rs. ${product.price}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            Description: {product.description}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>    \r\n                </Col>  \r\n                <Col md={3}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Price: \r\n                                    </Col>\r\n                                    <Col>\r\n                                        <strong>Rs. {product.price}</strong>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Status: \r\n                                    </Col>\r\n                                    <Col>\r\n                                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {product.countInStock > 0 && (\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Qty</Col>\r\n                                        <Col>\r\n                                            <Form.Control as='select' value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                                                {\r\n                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                        <option key={x+1} value={x+1}>\r\n                                                            {x+1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n                            <ListGroup.Item>\r\n                                <Button onClick={addToCartHandler} className='btn-block' type='button' disabled={product.countInStock === 0}>\r\n                                    Add To Cart\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row> \r\n\r\n\r\n            <Row>\r\n                <Col md={6}>\r\n                    <h2>Reviews</h2>\r\n                    {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n                    <ListGroup variant='flush'>\r\n                        {product.reviews.map((review) => (\r\n                            <ListGroup.Item key={review._id}>\r\n                                <strong>{review.name}</strong>\r\n                                <Rating  value={review.rating} />\r\n                                <p>{review.createdAt.substring(0,10)}</p>\r\n                                <p>{review.comment}</p>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Write a Customer Review</h2>\r\n                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n                            {userInfo ? (\r\n                                <Form onSubmit={submitHandler}>\r\n                                    <Form.Group controlId='rating'>\r\n                                        <Form.Label>Rating</Form.Label>\r\n                                        <Form.Control as='select' value={rating} onChange={(e) => setRating(e.target.value)}>\r\n                                            <option value=''>Select</option>\r\n                                            <option value='1'>1 - Poor</option>\r\n                                            <option value='2'>2 - Fair </option>\r\n                                            <option value='3'>3 - Good</option>\r\n                                            <option value='4'>4 - Very Good</option>\r\n                                            <option value='5'>5 - Excellent</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId='comment'>\r\n                                        <Form.Label>Comment</Form.Label>\r\n                                        <Form.Control as='textarea' row='3' value={comment} onChange={(e) => setComment(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n                                    <Button type='submit' variant='primary'>\r\n                                        Submit\r\n                                    </Button>\r\n                                </Form>\r\n                            ) : (\r\n                                <Message>\r\n                                    Please <Link to='/login'>sign in</Link> to write a review{' '}\r\n                                </Message>\r\n                                )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n            </>\r\n          )}       \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","D:\\shopify\\frontend\\src\\store.js",[],"D:\\shopify\\frontend\\src\\reducers\\productReducers.js",[],"D:\\shopify\\frontend\\src\\constants\\productConstant.js",[],"D:\\shopify\\frontend\\src\\actions\\productAction.js",[],"D:\\shopify\\frontend\\src\\components\\Message.js",[],"D:\\shopify\\frontend\\src\\components\\Loader.js",[],"D:\\shopify\\frontend\\src\\screens\\CartScreen.js",[],"D:\\shopify\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\shopify\\frontend\\src\\constants\\cartConstant.js",[],"D:\\shopify\\frontend\\src\\actions\\cartAction.js",[],"D:\\shopify\\frontend\\src\\reducers\\userReducers.js",[],"D:\\shopify\\frontend\\src\\constants\\userConstant.js",[],"D:\\shopify\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\shopify\\frontend\\src\\components\\FormContainer.js",[],"D:\\shopify\\frontend\\src\\actions\\userAction.js",[],"D:\\shopify\\frontend\\src\\screens\\RegisterScreen.js",[],"D:\\shopify\\frontend\\src\\screens\\ProfileScreen.js",[],"D:\\shopify\\frontend\\src\\screens\\ShippingScreen.js",[],"D:\\shopify\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\shopify\\frontend\\src\\screens\\PaymentScreen.js",[],"D:\\shopify\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"D:\\shopify\\frontend\\src\\actions\\orderAction.js",[],"D:\\shopify\\frontend\\src\\constants\\orderConstant.js",[],"D:\\shopify\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\shopify\\frontend\\src\\screens\\OrderScreen.js",["165"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\n\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderAction'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstant'\r\n\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    const orderId = match.params.id\r\n\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails);\r\n    const { order, loading, error } = orderDetails;\r\n\r\n    const orderPay = useSelector(state => state.orderPay);\r\n    const { success: successPay, loading: loadingPay } = orderPay;\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver);\r\n    const { success: successDeliver, loading: loadingDeliver } = orderDeliver;\r\n    \r\n    if (!loading) {\r\n        //   Calculate prices\r\n        const addDecimals = (num) => {\r\n          return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n    \r\n        order.itemsPrice = addDecimals(\r\n          order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n        )\r\n      }\r\n\r\n\r\n      useEffect(() => {\r\n\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        \r\n        const addPayPalScript = async()=>{\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script =  document.createElement('script');\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}&currency=INR`\r\n            script.async = true\r\n            script.onload = () =>{\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        if(!order || successPay || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if(!order.isPaid) {\r\n\r\n            // Paypal Script\r\n            if(!window.paypal) {\r\n                addPayPalScript();\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n\r\n    }, [orderId, dispatch, successPay, order, successDeliver])\r\n\r\n\r\n\r\n    const successPaymentHandler =(paymentResult)=>{\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n\r\n    const deliverHandler = ()=>{\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n\r\n    return ( \r\n         loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : <>\r\n            <h1>Order: {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name: </strong> {order.user.name}</p>\r\n                            <p><strong>Email: </strong><a href={`mailto: ${order.user.email}`}>{order.user.email}</a></p>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city}, {order.shippingAddress.postalCode}, {' '} \r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? <Message variant='success'>Delivered on {order.deliveredAt}</Message> : <Message variant='danger'>Not Delivered</Message>}\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? <Message variant='success'>Paid on {order.paidAt}</Message> : <Message variant='danger'>Not Paid</Message>}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? <Message>Order is empty</Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x Rs. {item.price} = Rs. {item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>Rs. {order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>Rs. {order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>Rs. {order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>Rs. {order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? <Loader /> : (\r\n                                        <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} currency=\"INR\" />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                            {loadingDeliver && <Loader />}\r\n                            {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                <ListGroup.Item>\r\n                                    <Button type='button' className='btn btn-block' onClick={deliverHandler}>\r\n                                        Mark As Delivered\r\n                                    </Button>\r\n                                </ListGroup.Item>\r\n                            )}\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n","D:\\shopify\\frontend\\src\\screens\\UserListScreen.js",[],"D:\\shopify\\frontend\\src\\screens\\UserEditScreen.js",[],"D:\\shopify\\frontend\\src\\screens\\ProductListScreen.js",[],"D:\\shopify\\frontend\\src\\screens\\ProductEditScreen.js",[],"D:\\shopify\\frontend\\src\\screens\\OrderListScreen.js",[],"D:\\shopify\\frontend\\src\\components\\SearchBox.js",[],{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":3,"column":58,"nodeType":"172","messageId":"173","endLine":3,"endColumn":69},{"ruleId":"170","severity":1,"message":"174","line":3,"column":71,"nodeType":"172","messageId":"173","endLine":3,"endColumn":80},{"ruleId":"175","severity":1,"message":"176","line":78,"column":8,"nodeType":"177","endLine":78,"endColumn":62,"suggestions":"178"},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'FormControl' is defined but never used.","Identifier","unusedVar","'FormGroup' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["181"],"no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},"Update the dependencies array to be: [orderId, dispatch, successPay, order, successDeliver, userInfo, history]",{"range":"184","text":"185"},[2621,2675],"[orderId, dispatch, successPay, order, successDeliver, userInfo, history]"]